void	get_expand_str(char *str, t_expand_info *expand_info, \
	char *node_str, int i)
{
	char	*value;

	while (*node_str)
	{
		if (*node_str == '$' && expand_info && expand_info->size != -1)
		{
			value = get_expand_value(expand_info);
			node_str += expand_info->size;
			if (value)
			{
				expand_info->start = ft_strlen(str);
				expand_info->size = ft_strlen(value);
				ft_strlcat (str + ft_strlen(str), value, ft_strlen(str) + \
					ft_strlen(value) + 1);
				i += ft_strlen(value);
			}
			expand_info = expand_info->next;
			continue ;
		}
		if (*node_str == '$' && expand_info \
				&& expand_info->size == -1 && expand_info->next != 0)
			expand_info = expand_info->next;
		str[i++] = *node_str;
		node_str++;
	}
}

int	expand_str_size(char *node_str, t_expand_info *expand_info, int size)
{
	char	*value;

	while (*node_str)
	{
		if (*node_str == '$' && expand_info && expand_info->size != -1)
		{
			value = get_expand_value(expand_info);
			if (value)
				size += ft_strlen(value);
			node_str += expand_info->size;
			expand_info = expand_info->next;
		}
		else
		{
			if (*node_str == '$' && expand_info \
				&& expand_info->size == -1 && expand_info->next != 0)
				expand_info = expand_info->next;
			size++;
			node_str++;
		}
	}
	return (size);
}